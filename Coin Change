class Solution {

private:
    int f(int i,int tar,vector<int>& coins,vector<vector<int>> &dp){
        if(i==0){
            if(tar%coins[0]==0) return tar/coins[0];
            else return 1e9;
        }
        if(dp[i][tar]!=-1) return dp[i][tar]; 
        int notTake=0+f(i-1,tar,coins,dp);
        int take=1e9;
        if(coins[i]<=tar) take=1+f(i,tar-coins[i],coins,dp);

        return dp[i][tar]=min(take,notTake);
    }

public:
    int coinChange(vector<int>& coins, int amount) {
        int n=coins.size();
        vector<vector<int>> dp(n,vector<int>(amount+1,-1));
        int res=f(n-1,amount,coins,dp);
        if(res!=1e9) return res;
        return -1;
    }
};
