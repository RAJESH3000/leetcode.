class Solution {
public:

    int findsum_afterdiv(vector<int>& nums,int n,int mid){
        int sum=0;
        for(int i=0;i<n;i++){
            sum+=(nums[i]/mid);
            
            if(nums[i]%mid != 0){
                sum+=1;
            }
        }
        return sum;
    }

    int smallestDivisor(vector<int>& nums, int threshold) {
        int n=nums.size();
        int low=1;
        int high=nums[0];
        for(int i=1;i<n;i++){
            if(high<nums[i]){
                high=nums[i];
            }
        }
        int ans=high;
        while(low<=high){
            int mid=(low+high)/2;
            if (findsum_afterdiv(nums,n,mid)<=threshold){
                ans=mid;
                high=mid-1;
            }
            else{
                low=mid+1;
            }
        }
        return ans;
        
    }
};
